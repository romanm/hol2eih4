# sql collection

# hol1Eih
sql.hol1Eih.update.operation_history.type.variable.value: UPDATE operation_history \
SET :field = :value WHERE operation_history_id = :operationHistoryId

sql.hol1Eih.update.operation_history.operation_history_duration: UPDATE operation_history oh LEFT JOIN operation_history ohs ON oh.operation_history_id=ohs.operation_history_id \
SET oh.operation_history_duration = :operationHistoryDuration \
, oh.operation_history_end = FROM_UNIXTIME(UNIX_TIMESTAMP(ohs.operation_history_start) + :operationHistoryDuration)  \
WHERE oh.operation_history_id = :operationHistoryId

sql.hol1Eih.update.operation_history.operation_history_start: UPDATE operation_history \
SET operation_history_start = :operationHistoryStartTS \
WHERE operation_history_id = :operationHistoryId;

sql.hol1Eih.update.operation_history.operation_history_end: \
UPDATE operation_history oh LEFT JOIN operation_history ohs ON oh.operation_history_id=ohs.operation_history_id \
SET oh.operation_history_end = FROM_UNIXTIME(UNIX_TIMESTAMP(ohs.operation_history_start) + ohs.operation_history_duration) \
WHERE oh.operation_history_id = :operationHistoryId

sql.hol1Eih.update.operation_history.operation_history_start1: UPDATE operation_history \
SET operation_history_start = FROM_UNIXTIME(:operationHistoryStart * 0,001) \
WHERE operation_history_id = :operationHistoryId


sql.hol1Eih.update.operation_history.icd: UPDATE operation_history oh LEFT JOIN icd icd ON icd.icd_id=:icdId \
SET oh.icd_id = icd.icd_id, oh.icd_start = icd.icd_start, oh.icd_end = icd.icd_end  \
WHERE operation_history_id = :operationHistoryId

sql.hol1Eih.update.operation_history.procedure_moz: UPDATE operation_history_moz \
SET procedure_moz_id = :procedureMozId WHERE operation_history_moz_id = :operationHistoryId

sql.hol1Eih.operation_history.delete: DELETE FROM operation_history WHERE operation_history_id = :operationHistoryId

sql.hol1Eih.operation_history.history_id: \
SELECT o.operation_code, o.operation_name, ore.operation_result_name , d.department_name, ps.surgery_name \
, oh.*  \
FROM (SELECT oc.operation_complication_name, anesthetist_name, a.anestesia_name, icd_code, icd_name, oh.* \
, ohm.* \
    FROM operation_history oh  \
    LEFT JOIN (SELECT ohm.operation_history_moz_id, pm.procedure_moz_id , pm.procedure_moz_code \
    , CONCAT(IF(pm.procedure_moz_parent_name IS NULL, '', pm.procedure_moz_parent_name),' ',pm.procedure_moz_name) procedure_moz_name \
    	FROM operation_history_moz ohm, procedure_moz pm \
     	WHERE ohm.procedure_moz_id=pm.procedure_moz_id) ohm ON ohm.operation_history_moz_id = oh.operation_history_id \
    LEFT JOIN icd icd ON icd.icd_id = oh.icd_id \
    LEFT JOIN operation_complication oc ON oh.operation_complication_id = oc.operation_complication_id  \
    LEFT JOIN anestesia a ON a.anestesia_id = oh.anestesia_id  \
    LEFT JOIN ( SELECT concat(personal_surname, ', ', personal_name, ' ', personal_patronymic) anesthetist_name, personal_id  \
            FROM personal \
        ) pa ON oh.anesthetist_id = pa.personal_id  \
    WHERE oh.history_id = :historyId \
    ) oh ,( SELECT concat(personal_surname, ', ', personal_name, ' ', personal_patronymic) surgery_name, personal_id  \
        FROM personal ) ps ,  operation o, department d, operation_result ore  \
WHERE oh.operation_result_id = ore.operation_result_id  AND oh.personal_id = ps.personal_id  AND  oh.department_id =  d.department_id  AND o.operation_id=oh.operation_id

sql.hol1Eih.operation_history.history_id.stop: \
SELECT o.operation_code, o.operation_name, ore.operation_result_name , d.department_name, ps.surgery_name , oh.*  \
FROM (SELECT oc.operation_complication_name, anesthetist_name, a.anestesia_name, icd_code, icd_name, oh.* \
    FROM operation_history oh  \
        LEFT JOIN icd icd ON icd.icd_id = oh.icd_id \
    LEFT JOIN operation_complication oc ON oh.operation_complication_id = oc.operation_complication_id  \
    LEFT JOIN anestesia a ON a.anestesia_id = oh.anestesia_id  \
    LEFT JOIN ( SELECT concat(personal_surname, ', ', personal_name, ' ', personal_patronymic) anesthetist_name, personal_id  \
            FROM personal \
        ) pa ON oh.anesthetist_id = pa.personal_id  \
    WHERE oh.history_id = :historyId \
    ) oh ,( SELECT concat(personal_surname, ', ', personal_name, ' ', personal_patronymic) surgery_name, personal_id  \
        FROM personal \
    ) ps ,  operation o, department d, operation_result ore  \
WHERE oh.operation_result_id = ore.operation_result_id  \
    AND oh.personal_id = ps.personal_id  \
    AND  oh.department_id =  d.department_id  \
    AND o.operation_id=oh.operation_id

sql.hol1Eih.operation_history2.history_id:  SELECT operation_history_id, oh.operation_id, operation_code, operation_name \
, icd_code, icd_name , oh.*  \
FROM operation_history oh, operation o, icd icd \
 where history_id=:historyId and o.operation_id=oh.operation_id and icd.icd_id=oh.icd_id

sql.hol1Eih.history.id: SELECT * FROM history h, patient p where history_id=:historyId and h.patient_id=p.patient_id
sql.hol1Eih.department-patient: SELECT concat(p.patient_surname, ' ', p.patient_name, ' ', p.patient_patronnymic) name, \
    dh.department_history_in, h.history_in, h.history_out, h.history_no, h.history_id, h.patient_id \
FROM department_history dh, history h, patient p \
WHERE dh.department_id = :departmentId AND h.patient_id = p.patient_id AND h.history_id=dh.history_id AND dh.department_history_out IS NULL;

#########################
sql.select.list.procedure_operation: SELECT po.*, p.PROCEDURE_NAME, o.OPERATION_NAME \
FROM list.PROCEDURE_operation po, list.PROCEDURE p, hol1.OPERATION o \
where po.PROCEDURE_CODE=p.PROCEDURE_CODE \
and po.OPERATION_CODE=o.OPERATION_CODE and 0=:num;

sql.insert.list.procedure_operation: insert into list.PROCEDURE_operation values (:PROCEDURE_CODE,:OPERATION_CODE);
sql.hol1.operation.group: SELECT * FROM hol1.OPERATION_GROUP where OPERATION_GROUP_id > :nullParameter
sql.hol1.operation.subgroup: SELECT * FROM hol1.OPERATION_SUBGROUP where OPERATION_GROUP_ID=:operationGroupId
sql.hol1.operation.operation: SELECT * FROM hol1.OPERATION where OPERATION_SUBGROUP_ID=:operationSubGroupId

sql.hol1.operation.seek: SELECT distinct g.operation_group_id uid,  g.operation_group_id,  null operation_subgroup_id, null operation_id, null operation_code,  operation_group_name name, null urgent \
 FROM hol1.operation_group g, hol1.operation_subgroup s, hol1.operation o \
 where g.operation_group_id = s.operation_group_id \
 and o.operation_subgroup_id = s.operation_subgroup_id \
and lower(operation_name) like lower(:likeText) \
union \
SELECT distinct s.operation_subgroup_id uid,  operation_group_id,  s.operation_subgroup_id, null operation_id, null operation_code,  operation_subgroup_name name, null urgent \
 FROM hol1.operation_subgroup s, hol1.operation o \
 where o.operation_subgroup_id = s.operation_subgroup_id \
and lower(operation_name) like lower(:likeText) \
union \
SELECT operation_id uid, operation_group_id, o.operation_subgroup_id, operation_id, operation_code,  operation_name name, operation_urgent  urgent \
 FROM hol1.operation o, hol1.operation_subgroup s \
  where o.operation_subgroup_id = s.operation_subgroup_id \
and lower(operation_name) like lower(:likeText) \
order by operation_group_id, operation_subgroup_id, operation_id

sql.hol1.show-table.names:operation_history, history
sql.hol1.show-table.columns: show columns from :tableName

sql.hol1.anesthesia:SELECT * FROM anestesia
sql.hol1.result:SELECT * FROM result
sql.hol1.complication:SELECT * FROM operation_complication
sql.hol1.complication.department:SELECT oc.*, oh.cnt \
FROM operation_complication oc, \
    (SELECT operation_complication_id, COUNT(operation_complication_id) cnt \
    FROM operation_history \
    WHERE operation_complication_id IS NOT NULL AND department_id=:departmentId \
    GROUP BY operation_complication_id ) oh \
WHERE oc.operation_complication_id=oh.operation_complication_id \
ORDER by cnt DESC

sql.hol1.department.operation: SELECT * FROM department \
where department_active and department_profile_id <3 order by department_profile_id desc, department_name
sql.hol1.anesthetist:SELECT personal_id, personal_username \
, concat(personal_surname,', ',personal_name, ' ', personal_patronymic) name FROM personal p where personal_anesthetist

sql.hol1.anesthetist.department: SELECT acnt.*, p.personal_username \
FROM personal p, \
    (SELECT anesthetist_id, count(*) cnt \
    FROM operation_history \
    WHERE department_id=26 \
    GROUP BY anesthetist_id) acnt \
WHERE p.personal_id=anesthetist_id \
ORDER BY cnt DESC;

sql.hol1.surgery: SELECT personal_id, personal_username \
, concat(personal_surname,', ',personal_name, ' ', personal_patronymic) name FROM personal where personal_surgeon
sql.hol1.surgery.department: SELECT p.personal_id, personal_username, cnt \
, concat(personal_surname,', ',personal_name, ' ', personal_patronymic) name  \
FROM personal_department pd, personal p, \
    (SELECT personal_id, count(personal_id) cnt \
    FROM operation_history \
    group by personal_id) pcnt \
where pd.department_id=:departmentId and p.personal_id=pd.personal_id and personal_surgeon and p.personal_id=pcnt.personal_id \
order by cnt desc


sql.hol1.procedure-operation.sibling:SELECT procedure_moz_id, procedure_moz_parent_id, procedure_moz_code \
, if(procedure_moz_parent_name is null, procedure_moz_name, concat(procedure_moz_parent_name,' ',procedure_moz_name)) procedure_moz_name \
 FROM procedure_moz where procedure_moz_parent_id=:parentId

sql.hol1.procedure-operation.sibling1: SELECT * FROM procedure_moz where procedure_moz_parent_id=:parentId
sql.hol1.icd.seek:SELECT * FROM icd where lower(icd_name) like lower(:likeText) or lower(icd_code) like lower(:likeText)
sql.list.procedure-operation.seek: SELECT DISTINCT p3.PROCEDURE_ID uid, p3.* FROM list.PROCEDURE p3 \
LEFT JOIN \
  (SELECT DISTINCT p2.PROCEDURE_ID uid, p2.* FROM list.PROCEDURE p2 \
   LEFT JOIN \
     (SELECT DISTINCT p1.PROCEDURE_ID uid, p1.* FROM list.PROCEDURE p1 \
      LEFT JOIN \
        (SELECT p.PROCEDURE_ID uid, p.* FROM list.PROCEDURE p \
         WHERE ( lower(PROCEDURE_NAME) LIKE lower(:likeText) \
         OR lower(PROCEDURE_CODE) LIKE lower(:likeText) )\
   and lower(PROCEDURE_CODE) LIKE lower('%7%') \
         ) p \
         ON p1.PROCEDURE_ID= p.PROCEDURE_PARENT_ID \
      WHERE p.PROCEDURE_ID IS NOT NULL) p1 ON p2.PROCEDURE_ID= p1.PROCEDURE_PARENT_ID \
   WHERE p1.PROCEDURE_ID IS NOT NULL) p2 ON p3.PROCEDURE_ID= p2.PROCEDURE_PARENT_ID \
WHERE p2.PROCEDURE_ID IS NOT NULL \
UNION \
SELECT DISTINCT p2.PROCEDURE_ID uid, p2.* FROM list.PROCEDURE p2 \
LEFT JOIN \
  (SELECT DISTINCT p1.PROCEDURE_ID uid, p1.* FROM list.PROCEDURE p1 \
   LEFT JOIN \
     (SELECT p.PROCEDURE_ID uid, p.* FROM list.PROCEDURE p \
      WHERE ( lower(PROCEDURE_NAME) LIKE lower(:likeText) \
         OR lower(PROCEDURE_CODE) LIKE lower(:likeText) )\
   and lower(PROCEDURE_CODE) LIKE lower('%7%') \
      ) \
      p ON p1.PROCEDURE_ID= p.PROCEDURE_PARENT_ID \
   WHERE p.PROCEDURE_ID IS NOT NULL) p1 ON p2.PROCEDURE_ID= p1.PROCEDURE_PARENT_ID \
WHERE p1.PROCEDURE_ID IS NOT NULL \
UNION \
SELECT DISTINCT p1.PROCEDURE_ID uid, p1.* FROM list.PROCEDURE p1 \
LEFT JOIN \
  (SELECT p.PROCEDURE_ID uid, p.* FROM list.PROCEDURE p \
   WHERE ( lower(PROCEDURE_NAME) LIKE lower(:likeText) \
         OR lower(PROCEDURE_CODE) LIKE lower(:likeText) )\
   and lower(PROCEDURE_CODE) LIKE lower('%7%') \
   ) \
   p ON p1.PROCEDURE_ID= p.PROCEDURE_PARENT_ID \
WHERE p.PROCEDURE_ID IS NOT NULL \
UNION \
SELECT p.PROCEDURE_ID uid, procedure_id, procedure_parent_id, procedure_code \
, concat(procedure_parent_name,' ',procedure_name) procedure_name, null procedure_parent_name FROM list.PROCEDURE p \
WHERE ( lower(concat(procedure_name,procedure_parent_name)) LIKE lower(:likeText) \
         OR lower(PROCEDURE_CODE) LIKE lower(:likeText) )\
and lower(PROCEDURE_CODE) LIKE lower('%7%') \
ORDER BY PROCEDURE_ID

sql.list.procedure.sibling: SELECT * FROM list.PROCEDURE where PROCEDURE_PARENT_ID=:parentId
sql.list.procedure.seek: SELECT DISTINCT p3.PROCEDURE_ID uid, p3.* FROM list.PROCEDURE p3 \
LEFT JOIN \
  (SELECT DISTINCT p2.PROCEDURE_ID uid, p2.* FROM list.PROCEDURE p2 \
   LEFT JOIN \
     (SELECT DISTINCT p1.PROCEDURE_ID uid, p1.* FROM list.PROCEDURE p1 \
      LEFT JOIN \
        (SELECT p.PROCEDURE_ID uid, p.* FROM list.PROCEDURE p \
         WHERE ( lower(PROCEDURE_NAME) LIKE lower(:likeText) \
         OR lower(PROCEDURE_CODE) LIKE lower(:likeText) )\
 ) p ON p1.PROCEDURE_ID= p.PROCEDURE_PARENT_ID \
      WHERE p.PROCEDURE_ID IS NOT NULL) p1 ON p2.PROCEDURE_ID= p1.PROCEDURE_PARENT_ID \
   WHERE p1.PROCEDURE_ID IS NOT NULL) p2 ON p3.PROCEDURE_ID= p2.PROCEDURE_PARENT_ID \
WHERE p2.PROCEDURE_ID IS NOT NULL \
UNION \
SELECT DISTINCT p2.PROCEDURE_ID uid, p2.* FROM list.PROCEDURE p2 \
LEFT JOIN \
  (SELECT DISTINCT p1.PROCEDURE_ID uid, p1.* FROM list.PROCEDURE p1 \
   LEFT JOIN \
     (SELECT p.PROCEDURE_ID uid, p.* FROM list.PROCEDURE p \
      WHERE ( lower(PROCEDURE_NAME) LIKE lower(:likeText) \
         OR lower(PROCEDURE_CODE) LIKE lower(:likeText) )\
 ) p ON p1.PROCEDURE_ID= p.PROCEDURE_PARENT_ID \
   WHERE p.PROCEDURE_ID IS NOT NULL) p1 ON p2.PROCEDURE_ID= p1.PROCEDURE_PARENT_ID \
WHERE p1.PROCEDURE_ID IS NOT NULL \
UNION \
SELECT DISTINCT p1.PROCEDURE_ID uid, p1.* FROM list.PROCEDURE p1 \
LEFT JOIN \
  (SELECT p.PROCEDURE_ID uid, p.* FROM list.PROCEDURE p \
   WHERE ( lower(PROCEDURE_NAME) LIKE lower(:likeText) \
         OR lower(PROCEDURE_CODE) LIKE lower(:likeText) )\
 ) p ON p1.PROCEDURE_ID= p.PROCEDURE_PARENT_ID \
WHERE p.PROCEDURE_ID IS NOT NULL \
UNION \
SELECT p.PROCEDURE_ID uid, procedure_moz_id, procedure_moz_parent_id, procedure_moz_code \
, concat(procedure_moz_parent_name,' ',procedure_moz_name) procedure_moz_name, null procedure_moz_parent_name FROM list.PROCEDURE p \
WHERE ( lower(concat(procedure_moz_name,procedure_moz_parent_name)) LIKE lower(:likeText) \
         OR lower(PROCEDURE_CODE) LIKE lower(:likeText) )\
ORDER BY PROCEDURE_ID


stop.sql.list.procedure.seek: SELECT distinct p1.PROCEDURE_ID uid, p1.* FROM list.PROCEDURE p1 left join ( \
SELECT p.PROCEDURE_ID uid, p.* FROM list.PROCEDURE p where PROCEDURE_NAME like :likeText \
) p2 \
on p1.PROCEDURE_ID= p2.PROCEDURE_PARENT_ID \
where p2.PROCEDURE_ID is not null \
union \
SELECT p.PROCEDURE_ID uid, p.* FROM list.PROCEDURE p where PROCEDURE_NAME like :likeText
